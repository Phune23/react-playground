{
  "id": "listKeys",
  "title": "List & Keys",
  "description": "Trong React, danh sách (lists) được render bằng phương thức map(), và cần có key (khóa) duy nhất để React nhận diện mỗi item thay đổi.",
  "code": "function App() {\n  // Dữ liệu mẫu - danh sách công việc\n  const [tasks, setTasks] = React.useState([\n    { id: 1, text: 'Học React cơ bản', completed: true },\n    { id: 2, text: 'Thực hành React Hooks', completed: false },\n    { id: 3, text: 'Xây dựng dự án React', completed: false },\n    { id: 4, text: 'Học Redux', completed: false },\n    { id: 5, text: 'Làm dự án với Context API', completed: false },\n    { id: 6, text: 'Tìm hiểu về React Router', completed: false }\n  ]);\n  \n  // State lưu trữ giá trị task mới\n  const [newTask, setNewTask] = React.useState('');\n\n  // Tự động phát hiện theme từ ứng dụng chính\n  const theme = document.documentElement.getAttribute('data-theme') === 'dark' ? 'dark' : 'light';\n\n  // Thêm task mới\n  const addTask = () => {\n    if (newTask.trim() !== '') {\n      setTasks([...tasks, { id: Date.now(), text: newTask, completed: false }]);\n      setNewTask('');\n    }\n  };\n\n  // Đánh dấu hoàn thành/chưa hoàn thành\n  const toggleComplete = (taskId) => {\n    setTasks(tasks.map(task => \n      task.id === taskId ? { ...task, completed: !task.completed } : task\n    ));\n  };\n\n  // Xóa công việc\n  const deleteTask = (taskId) => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n\n  // Các style thay đổi theo theme\n  const styles = {\n    container: {\n      padding: '15px',\n      backgroundColor: theme === 'light' ? '#ffffff' : '#333333',\n      color: theme === 'light' ? '#333333' : '#ffffff',\n      borderRadius: '8px',\n      maxWidth: '600px',\n      margin: '0 auto'\n    },\n    heading: {\n      color: theme === 'light' ? '#333333' : '#ffffff',\n      marginBottom: '15px'\n    },\n    form: {\n      display: 'flex',\n      marginBottom: '15px'\n    },\n    input: {\n      padding: '8px',\n      marginRight: '8px',\n      borderRadius: '4px',\n      border: `1px solid ${theme === 'light' ? '#cccccc' : '#666666'}`,\n      backgroundColor: theme === 'light' ? '#ffffff' : '#555555',\n      color: theme === 'light' ? '#333333' : '#ffffff',\n      flexGrow: 1\n    },\n    button: {\n      padding: '8px 12px',\n      backgroundColor: '#4CAF50',\n      color: 'white',\n      border: 'none',\n      borderRadius: '4px',\n      cursor: 'pointer'\n    },\n    listContainer: {\n      maxHeight: '250px',\n      overflowY: 'auto',\n      border: `1px solid ${theme === 'light' ? '#e0e0e0' : '#555555'}`,\n      borderRadius: '4px',\n      backgroundColor: theme === 'light' ? '#f9f9f9' : '#444444',\n      padding: '5px'\n    },\n    list: {\n      listStyleType: 'none',\n      padding: 0,\n      margin: 0\n    },\n    listItem: (completed) => ({\n      padding: '10px',\n      margin: '5px 0',\n      backgroundColor: theme === 'light' ? '#f5f5f5' : '#3a3a3a',\n      color: theme === 'light' ? '#333333' : '#ffffff',\n      display: 'flex',\n      justifyContent: 'space-between',\n      textDecoration: completed ? 'line-through' : 'none',\n      borderRadius: '4px'\n    }),\n    deleteButton: {\n      backgroundColor: '#ff5555',\n      color: 'white',\n      border: 'none',\n      padding: '3px 8px',\n      borderRadius: '4px',\n      cursor: 'pointer'\n    },\n    emptyMessage: {\n      textAlign: 'center',\n      padding: '15px',\n      color: theme === 'light' ? '#666666' : '#cccccc',\n      backgroundColor: theme === 'light' ? '#f5f5f5' : '#3a3a3a',\n      borderRadius: '4px',\n      margin: '10px 0'\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      <h2 style={styles.heading}>Danh sách công việc</h2>\n      \n      {/* Form thêm task */}\n      <div style={styles.form}>\n        <input\n          type=\"text\"\n          value={newTask}\n          onChange={(e) => setNewTask(e.target.value)}\n          placeholder=\"Nhập công việc mới\"\n          style={styles.input}\n          onKeyPress={(e) => e.key === 'Enter' && addTask()}\n        />\n        <button onClick={addTask} style={styles.button}>Thêm</button>\n      </div>\n      \n      {/* Container cho danh sách với overflow */}\n      <div style={styles.listContainer}>\n        {/* Danh sách tasks */}\n        <ul style={styles.list}>\n          {tasks.map(task => (\n            <li key={task.id} style={styles.listItem(task.completed)}>\n              <div>\n                <input \n                  type=\"checkbox\" \n                  checked={task.completed} \n                  onChange={() => toggleComplete(task.id)}\n                />\n                <span style={{ marginLeft: '10px' }}>{task.text}</span>\n              </div>\n              <button \n                onClick={() => deleteTask(task.id)}\n                style={styles.deleteButton}\n              >\n                Xóa\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n      \n      {/* Hiển thị thông báo khi không có task nào */}\n      {tasks.length === 0 && (\n        <p style={styles.emptyMessage}>\n          Không có công việc nào. Hãy thêm công việc mới!\n        </p>\n      )}\n    </div>\n  );\n}"
}