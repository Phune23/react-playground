{
  "id": "useContext",
  "title": "useContext",
  "description": "Ví dụ sử dụng useContext Hook để chia sẻ và thay đổi theme giữa các component mà không cần truyền props qua nhiều cấp component trung gian.",
  "code": "// Wrap toàn bộ code trong một IIFE để chạy ngay lập tức\n(() => {\n  // Định nghĩa ThemeContext\n  const ThemeContext = React.createContext({\n    theme: 'light',\n    toggleTheme: () => {}\n  });\n\n  // Component App chính\n  function App() {\n    const [theme, setTheme] = React.useState('light');\n\n    const toggleTheme = () => {\n      setTheme(theme === 'light' ? 'dark' : 'light');\n    };\n\n    // Component con sử dụng context - được định nghĩa bên trong App\n    function ThemedButton() {\n      const { theme, toggleTheme } = React.useContext(ThemeContext);\n\n      const style = {\n        backgroundColor: theme === 'light' ? '#ffffff' : '#333333',\n        color: theme === 'light' ? '#000000' : '#ffffff',\n        padding: '10px 15px',\n        border: '1px solid ' + (theme === 'light' ? '#000000' : '#ffffff'),\n        borderRadius: '4px',\n        cursor: 'pointer'\n      };\n\n      return (\n        <button style={style} onClick={toggleTheme}>\n          Chuyển sang theme {theme === 'light' ? 'tối' : 'sáng'}\n        </button>\n      );\n    }\n\n    // Component trung gian sử dụng ThemedButton - cũng được định nghĩa bên trong App\n    function Toolbar() {\n      return (\n        <div style={{ margin: '10px 0' }}>\n          <ThemedButton />\n        </div>\n      );\n    }\n\n    // Context value\n    const themeContextValue = {\n      theme,\n      toggleTheme\n    };\n\n    // Trả về UI của ứng dụng với ThemeContext.Provider bao bọc\n    return (\n      <ThemeContext.Provider value={themeContextValue}>\n        <div style={{ \n          padding: '20px', \n          backgroundColor: theme === 'light' ? '#f5f5f5' : '#222222', \n          color: theme === 'light' ? '#000000' : '#ffffff', \n          borderRadius: '8px', \n          transition: 'all 0.3s ease' \n        }}>\n          <h2>useContext Hook trong React</h2>\n          <p>Context giúp truyền dữ liệu xuyên suốt cây component mà không cần truyền props qua nhiều cấp component trung gian.</p>\n          <Toolbar />\n          <p>Theme hiện tại: <strong>{theme}</strong></p>\n        </div>\n      </ThemeContext.Provider>\n    );\n  }\n\n  // Render App component\n  return <App />;\n})()"
}
